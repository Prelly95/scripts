#!/bin/sh
# changeVolume

# Arbitrary but unique message id
msgId="991049"
# Query amixer for the current volume and whether or not the speaker is muted
volume=$(echo $(pactl get-sink-volume @DEFAULT_SINK@) | awk '{print $5}' | sed 's/[^0-9]*//g')
mute="$(echo $(pactl get-sink-mute @DEFAULT_SINK@) | awk '{print $2}')"

case $1 in
"get")
	if [[ "$mute" == "yes" ]]; then
		echo "mute"
	else
		echo "$volume"
	fi
	exit 0
	;;
"mute")
	pactl set-sink-mute @DEFAULT_SINK@ 1 > /dev/null
	;;

"unmute")
	pactl set-sink-mute @DEFAULT_SINK@ 0 > /dev/null
	;;

"toggle")
	pactl set-sink-mute @DEFAULT_SINK@ toggle > /dev/null
	;;

*)
	pactl set-sink-mute @DEFAULT_SINK@ 0 > /dev/null
	pactl set-sink-volume @DEFAULT_SINK@ $1 > /dev/null
	if [[ $volume -ge 100 ]]; then
		pactl set-sink-volume @DEFAULT_SINK@ 100% > /dev/null
		volume=100
	fi
	;;
esac

# get new volume
volume=$(echo $(pactl get-sink-volume @DEFAULT_SINK@) | awk '{print $5}' | sed 's/[^0-9]*//g')
mute="$(echo $(pactl get-sink-mute @DEFAULT_SINK@) | awk '{print $2}')"

if [[ $volume == 0 || "$mute" == "yes" ]]; then
	# Show the sound muted notification
	dunstify -a "changeVolume" -u low -i audio-volume-muted -r "$msgId" "Volume muted"
else
	# Show the volume notification
	dunstify -a "changeVolume" -u low -i audio-volume-high -r "$msgId" \
	-h int:value:$volume "Volume: ${volume}%"
fi

# Play the volume changed sound
canberra-gtk-play -i audio-volume-change -d "changeVolume"
